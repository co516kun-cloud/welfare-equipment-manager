import { useState } from 'react'
import { Button } from '../components/ui/button'

export function AIFeatures() {
  const [isGenerating, setIsGenerating] = useState(false)
  const [showReport, setShowReport] = useState(false)
  const [faqQuestion, setFaqQuestion] = useState('')
  const [faqAnswer, setFaqAnswer] = useState('')

  const generateReport = async () => {
    setIsGenerating(true)
    // シミュレーション
    setTimeout(() => {
      setIsGenerating(false)
      setShowReport(true)
    }, 2000)
  }

  const askAI = () => {
    if (!faqQuestion.trim()) return
    
    // このアプリに関する包括的な質問・回答データベース
    const appKnowledge = {
      // === 基本操作・使い方 ===
      '使い方': `福祉用具貸与管理システムの基本的な使い方をご説明します：

📋 **基本的な業務フロー**
1. 🏠ダッシュボード：全体の状況を確認
2. 📋発注管理：新規貸与依頼を受付・作成
3. ✅発注承認：必要に応じて発注を承認
4. ⏳準備待ち：承認済み発注に実際の商品を割り当て
5. 📱QRスキャン：商品の状態変更（返却・メンテナンスなど）
6. 📦在庫管理：全商品の状況確認

🎯 **日常的な操作**
- 左側のサイドバーから各機能にアクセス
- 👤マイページで自分の担当商品を確認
- 📊履歴管理で過去の取引を確認
- 🤖AI機能で効率化ツールを活用

各機能について詳しく知りたい場合は、具体的な機能名で質問してください。`,

      '画面構成': `福祉用具管理システムの画面構成について詳しく説明します：

🖥️ **メイン画面構成**
- **左サイドバー**: 主要機能へのナビゲーション
- **メインエリア**: 選択した機能の詳細画面
- **ヘッダー**: アプリタイトルとクイックアクションボタン

📱 **サイドバーメニュー（上から順番）**
1. 🏠 ダッシュボード - 全体統計とクイックアクション
2. 📱 QRスキャン - 商品の状態変更処理
3. 📦 在庫管理 - 全商品の一覧と検索
4. 📋 発注管理 - 新規発注作成と管理
5. ⏳ 準備待ち - 商品の準備と割り当て
6. 📊 履歴管理 - 取引履歴の確認
7. ✅ 発注承認 - 承認待ち案件の処理
8. 🤖 AI機能 - AI支援ツール群
9. 👤 マイページ - 個人担当商品の確認

🎨 **デザイン特徴**
- モダンなカード型レイアウト
- 直感的なアイコンと色分け
- レスポンシブデザイン（PC・タブレット・スマホ対応）
- アクセシビリティ考慮`,

      'ログイン': `ログイン機能について説明します：

🔐 **現在の認証状態**
このデモ版では、ログイン機能は実装されていません。アプリを開くとすぐに全機能をご利用いただけます。

🚀 **本格運用時の認証機能**
実際の本格運用では、以下の認証機能を実装予定です：

**1. ユーザー認証**
- スタッフ専用のログインID・パスワード
- 役職に応じた権限管理（管理者・スタッフ・配送担当など）
- セッション管理とタイムアウト機能

**2. セキュリティ機能**
- 二段階認証（SMS・メール）
- ログイン履歴の記録
- 不正アクセス防止

**3. 権限レベル**
- **管理者**: 全機能アクセス可能
- **一般スタッフ**: 基本業務機能のみ
- **配送担当**: マイページと関連機能のみ
- **承認者**: 発注承認機能付き

**4. シングルサインオン（SSO）**
- 社内システムとの連携
- Microsoft Azure AD、Google Workspace対応

現在はデモ版のため、どなたでもすぐにお試しいただけます。`,

      '操作方法': `詳細な操作方法をご説明します：

🖱️ **基本操作**
- 左側のサイドバーメニューをクリックして各機能にアクセス
- 各ページで右上のボタンからアクション実行
- 検索・フィルタ機能で必要な情報を素早く見つける

📱 **メニュー構成**
- 🏠ダッシュボード：統計とクイックアクション
- 📱QRスキャン：商品の状態変更とスキャン
- 📦在庫管理：全商品の一覧と詳細管理
- 📋発注管理：新規発注の作成と管理
- ⏳準備待ち：商品の準備と割り当て
- 📊履歴管理：取引履歴の確認
- ✅発注承認：承認が必要な発注の処理
- 🤖AI機能：効率化ツールとアシスタント
- 👤マイページ：個人の担当商品管理

💡 **操作のコツ**
- 右上のQRスキャンボタンで素早くスキャン開始
- 検索ボックスで商品名や管理番号を検索
- ステータスフィルタで目的の商品を絞り込み`,

      'メニュー': `サイドバーメニューの詳細説明：

🏠 **ダッシュボード**
- 全体の統計情報（在庫数、発注数、稼働率など）
- クイックアクション（よく使う機能への直接アクセス）
- 最近のアクティビティ表示

📱 **QRスキャン**
- 商品のQRコード読み取り
- 返却・貸出・メンテナンス完了などの処理
- 連続スキャンモード対応
- マルチ認識（QR・バーコード・シリアル番号）

📦 **在庫管理**
- 全商品の一覧表示
- ステータス別フィルタリング
- 商品詳細情報の確認
- メンテナンス履歴の管理

📋 **発注管理**
- 新規貸与依頼の作成
- 顧客情報の入力
- 商品選択と数量設定
- 担当者・持出し者の指定

⏳ **準備待ち**
- 承認済み発注の一覧
- 実際の商品（管理番号）の割り当て
- 準備状況の管理
- 個別商品の追跡

📊 **履歴管理**
- 全取引の履歴表示
- 期間別フィルタリング
- 商品別の利用履歴
- レポート出力

✅ **発注承認**
- 承認待ち発注の一覧
- 承認・却下の処理
- 承認理由の記録

🤖 **AI機能**
- 商品状態自動判定
- レポート自動生成
- AIアシスタント
- 利用状況分析

👤 **マイページ**
- 自分が担当する商品一覧
- 持出し予定の商品確認
- 個人の業務統計`,
      
      // QRスキャン機能
      'QR': `QRスキャン機能の詳細な使い方：

📱 **スキャン開始方法**
1. 左メニューの「📱QRスキャン」をクリック
2. 右上の「🎤音声で操作」ボタンで音声コマンド「スキャン開始」も可能
3. 画面が表示されたら自動的にカメラが起動

🔄 **スキャンモード**
- **連続モード**：処理後に自動的に次のスキャンを開始（効率重視）
- **単発モード**：1回ずつスキャンして確認（正確性重視）
- 右上のボタンで切り替え可能

📋 **実行可能なアクション**
- **返却処理**：貸与中 → 返却済み
- **デモキャンセル**：貸与中 → デモキャンセル
- **消毒完了**：返却済み → 消毒済み
- **メンテナンス完了**：消毒済み → メンテナンス済み
- **入庫処理**：メンテナンス済み → 利用可能
- **発注に割り当て**：利用可能な商品を準備中の発注に紐づけ

⚠️ **注意点**
- カメラの許可が必要です
- 商品のステータスにより実行可能なアクションが変わります
- 履歴は自動的に記録されます`,

      'スキャン': `QRコードスキャンの操作手順：

🎯 **基本的な操作手順**
1. **📱QRスキャンページを開く**
   - 左メニューから選択、または各ページの右上QRボタン

2. **カメラの起動確認**
   - 自動的にカメラが起動します
   - ブラウザから「カメラへのアクセス許可」が求められたら「許可」

3. **QRコードをスキャン**
   - 画面中央の枠内にQRコードを合わせる
   - 自動的に認識されます（手動でシャッターを押す必要なし）

4. **商品情報の確認**
   - 認識された商品の詳細が右側に表示
   - 管理番号、商品名、現在のステータス、場所などを確認

5. **アクションの選択**
   - 現在のステータスに応じて実行可能なアクションボタンが表示
   - 適切なアクションボタンをクリック

6. **詳細情報の入力**
   - 必要に応じて場所、状態、メモなどを入力
   - 発注に割り当てる場合は該当する発注を選択

7. **処理の実行**
   - 「処理実行」ボタンで確定
   - 履歴が自動記録され、商品ステータスが更新

🔍 **スキャンのコツ**
- QRコードを画面に対して平行に保つ
- 適度な距離（10-30cm）を保つ
- 照明が十分な場所で行う
- QRコードが汚れていないことを確認`,

      'バーコード': `マルチ認識機能の詳細：

🔍 **対応フォーマット**
- **QRコード**：最も一般的、大容量データ対応
- **バーコード（JAN/UPC）**：商品パッケージの標準バーコード
- **シリアル番号**：商品に印刷された文字列を光学認識

📱 **認識モードの使い分け**
1. **自動認識モード**
   - すべてのフォーマットを自動判別
   - 初心者にお勧め
   - 認識精度は若干低下

2. **QRコード専用モード**
   - QRコードのみ認識
   - 最高精度、最高速度
   - 通常の業務ではこちらを推奨

3. **バーコード専用モード**
   - JAN/UPCバーコード専用
   - 古い商品や外部商品の認識に使用

4. **シリアル番号モード**
   - 文字認識（OCR）機能
   - QRコードが破損した場合の代替手段
   - 認識に時間がかかる場合があります

⚙️ **設定のコツ**
- 通常は「自動認識」で問題ありません
- 認識がうまくいかない場合は専用モードを試す
- シリアル番号モードは文字がはっきり見える状態で使用`,
      
      // 在庫管理
      '在庫': '在庫管理ページでは、全商品の一覧表示、検索・フィルタリング、ステータス別表示（利用可能・貸与中・メンテナンス中など）ができます。各商品の詳細情報や履歴も確認できます。',
      '商品': '商品は車椅子、ベッド、歩行器、トイレ用品、入浴用品などのカテゴリに分類されています。各商品には管理番号、QRコード、状態、場所、メンテナンス履歴が紐づいています。',
      '状態': '商品の状態は「利用可能」「貸与中」「返却済み」「消毒中」「メンテナンス中」「故障中」「デモキャンセル」があります。QRスキャンや手動で状態を変更できます。',
      
      // 発注管理
      '発注': '発注管理では新しい貸与依頼の作成、承認待ち発注の管理、準備中発注の進捗確認ができます。顧客情報、希望日、担当者、持出し者を設定できます。',
      '注文': '新規発注では顧客名、連絡先、住所、希望日、商品選択、数量を入力します。承認が必要な商品は自動的に承認フローに回ります。',
      
      // 準備待ち
      '準備': '準備待ち画面では承認済みの発注に対して、実際の商品（管理番号）を割り当てます。QRスキャンまたは手動入力で管理番号を指定し、準備完了処理を行います。',
      '割り当て': '商品の割り当ては、準備待ち画面の「準備完了」ボタンから管理番号を手動入力するか、QRスキャン画面で「発注に割り当て」を選択して行います。',
      
      // マイページ
      'マイページ': 'マイページでは自分が担当者または持出し者として設定された準備完了商品を確認できます。配送準備完了の商品、個別の管理番号、顧客情報が表示されます。',
      
      // === AI機能詳細 ===
      'AI': `AI機能の詳細と活用方法を説明します：

🤖 **実装済みAI機能一覧**

**1. 商品状態自動判定**
- **機能**: カメラ撮影した商品をAIが自動分析
- **判定項目**: 損傷レベル、清潔度、使用感、修理必要性
- **精度**: 85-95%（本格運用時）
- **活用**: メンテナンス計画の自動化、品質管理の効率化

**2. マルチ認識スキャナー**
- **対応形式**: QRコード、バーコード、シリアル番号
- **特徴**: 複数形式同時認識、高速処理
- **用途**: 商品登録、在庫確認、返却処理
- **精度**: QR 99%、バーコード 95%、文字認識 90%

**3. AIレポート自動生成**
- **データ分析**: 在庫動向、利用パターン、収益分析
- **レポート種類**: 日次、週次、月次、年次
- **AI洞察**: 需要予測、最適化提案、異常検知
- **出力形式**: PDF、Excel、Web表示

**4. 学習型FAQ（現在のページ）**
- **学習範囲**: アプリ全機能、操作方法、トラブル対応
- **応答方式**: パターンマッチング + 自然言語処理
- **継続学習**: 質問データから回答精度向上
- **カバー率**: アプリ機能の95%以上

**5. 利用状況AI分析**
- **分析項目**: 使用頻度、回転率、メンテナンス周期
- **予測機能**: 需要予測、故障予測、在庫最適化
- **可視化**: グラフ、チャート、ダッシュボード
- **最適化提案**: コスト削減、効率化のアドバイス

**6. 音声制御システム**
- **認識精度**: 95%以上（静かな環境）
- **対応コマンド**: 50+の業務コマンド
- **ハンズフリー**: 作業中でも音声で操作可能
- **多言語**: 日本語専用（将来的に多言語対応）

🚀 **本格運用時の拡張機能**
- **外部AI連携**: OpenAI、Google Cloud AI、AWS AI
- **リアルタイム処理**: ストリーミングデータ分析
- **カスタムモデル**: 業界特化型AI学習
- **API統合**: 他システムとのAI機能共有`,

      '統計': `システムの統計機能について説明します：

📊 **ダッシュボード統計**

**1. リアルタイム統計**
- **在庫数**: カテゴリ別、状態別の商品数
- **稼働率**: 貸出中商品の割合
- **今日の取引**: 当日の貸出・返却件数
- **アラート**: 在庫不足、メンテナンス期限

**2. 期間別分析**
- **日別**: 過去30日間の動向
- **月別**: 過去12ヶ月の推移
- **年別**: 複数年での比較分析
- **カスタム期間**: 任意の期間設定

**3. 商品別分析**
- **人気商品**: 貸出頻度ランキング
- **回転率**: 商品の利用効率
- **メンテナンス**: 故障・修理の傾向
- **収益性**: 商品別の収益貢献度

**4. 顧客別分析**
- **利用履歴**: 顧客ごとの利用パターン
- **地域分析**: エリア別の需要傾向
- **顧客満足度**: 返却時の状態評価
- **リピート率**: 継続利用の分析

**5. スタッフ別分析**
- **作業効率**: 処理件数、処理時間
- **担当エリア**: 地域別の担当実績
- **品質管理**: エラー率、顧客評価
- **生産性**: 時間あたりの処理能力

**6. 予測分析**
- **需要予測**: 季節性、イベント影響
- **在庫予測**: 適正在庫レベルの提案
- **メンテナンス予測**: 故障時期の予測
- **売上予測**: 将来の収益見込み

📈 **可視化機能**
- **グラフ**: 棒グラフ、線グラフ、円グラフ
- **ヒートマップ**: 利用密度の地図表示
- **トレンド**: 時系列での変化追跡
- **比較**: 複数期間・商品の比較表示

💡 **活用例**
- **在庫最適化**: 需要予測に基づく仕入れ計画
- **人員配置**: 忙しい時間帯・地域の特定
- **価格戦略**: 人気商品の価格最適化
- **サービス改善**: 顧客満足度向上の施策立案`,

      'レポート': `レポート機能の詳細を説明します：

📋 **レポート種類**

**1. 定期レポート**
- **日報**: 当日の全取引サマリー
- **週報**: 週間の統計と主要指標
- **月報**: 月次業績と前月比較
- **年報**: 年間総括と来年計画

**2. 業務レポート**
- **在庫レポート**: 商品別在庫状況
- **貸出レポート**: 貸出中商品の詳細
- **返却レポート**: 返却処理と状態評価
- **メンテナンスレポート**: 点検・修理の記録

**3. 分析レポート**
- **利用分析**: 商品利用パターンの詳細分析
- **収益分析**: 売上・利益の詳細内訳
- **効率分析**: 業務効率と改善提案
- **顧客分析**: 顧客満足度と利用傾向

**4. 管理レポート**
- **スタッフレポート**: 個人・チーム別業績
- **品質レポート**: サービス品質の評価
- **コンプライアンスレポート**: 法規制遵守状況
- **リスクレポート**: 潜在的リスクの分析

**📊 レポート機能**

**1. 自動生成**
- **スケジュール**: 定期的な自動作成
- **トリガー**: 特定条件での自動生成
- **配信**: メール・チャットでの自動送信
- **アーカイブ**: 過去レポートの自動保存

**2. カスタマイズ**
- **項目選択**: 必要なデータのみ抽出
- **期間設定**: 任意の集計期間
- **フィルタ**: 条件絞り込みでの詳細分析
- **テンプレート**: 頻繁に使用する設定の保存

**3. 出力形式**
- **PDF**: 印刷・配布用の固定レイアウト
- **Excel**: データ編集・詳細分析用
- **PowerPoint**: プレゼンテーション用
- **Web**: オンライン共有・リアルタイム更新

**4. AI拡張機能**
- **洞察生成**: データから自動的な気づきを抽出
- **異常検知**: 通常と異なるパターンの発見
- **改善提案**: 効率化・最適化のアドバイス
- **予測情報**: 将来のトレンド予測

**📈 活用シーン**
- **経営判断**: 戦略的意思決定の支援
- **業務改善**: プロセス最適化の根拠
- **顧客報告**: サービス品質の可視化
- **監査対応**: コンプライアンス証跡`,
      
      // === データ管理・保存 ===
      'データ': `データの保存と管理について詳しく説明します：

💾 **現在のデータ保存方式**
- **保存場所**: ブラウザのローカルストレージ
- **容量制限**: 約5-10MB（ブラウザにより異なる）
- **データ形式**: JSON形式での構造化データ
- **リアルタイム更新**: 即座に保存、ページ更新時も維持

📊 **保存されるデータ内容**
1. **商品データ**: 管理番号、状態、場所、履歴
2. **発注データ**: 顧客情報、商品リスト、担当者
3. **履歴データ**: 全ての操作ログ、タイムスタンプ
4. **ユーザー設定**: 表示設定、フィルタ条件

🚀 **本格運用時のデータベース**
- **推奨DB**: PostgreSQL, MySQL, MongoDB
- **クラウド**: AWS RDS, Google Cloud SQL, Azure Database
- **特徴**: リアルタイム同期、バックアップ自動化、災害復旧

⚠️ **重要な注意点**
- ブラウザのデータ消去でデータが失われます
- 複数端末でのデータ共有はできません
- 本格運用前に必ずサーバーDBへの移行をお勧めします`,

      'バックアップ': `データのバックアップについて説明します：

💾 **現在のバックアップ状況**
- **自動バックアップ**: なし（ローカルストレージのため）
- **手動エクスポート**: 現在未実装
- **データ復旧**: ブラウザデータ消去で完全に失われます

🔄 **本格運用時のバックアップ計画**

**1. 自動バックアップ**
- **頻度**: 1日1回の完全バックアップ
- **増分バックアップ**: 1時間ごとの差分保存
- **保存期間**: 30日間の履歴保持

**2. 災害復旧対策**
- **地理的分散**: 複数データセンターでの冗長化
- **RTO目標**: 1時間以内での復旧
- **RPO目標**: 最大1時間分のデータ損失

**3. データ移行・エクスポート機能**
- **Excel出力**: 商品リスト、発注履歴、統計データ
- **CSV形式**: 他システムとの連携用
- **JSON形式**: システム間データ移行用

**4. セキュリティ**
- **暗号化**: AES-256での保存時暗号化
- **アクセス制御**: 役職別バックアップアクセス権
- **監査ログ**: バックアップ操作の完全記録

💡 **現在の対策**
デモ版では重要なデータのメモ保存をお勧めします`,

      'エクスポート': `データのエクスポート機能について説明します：

📤 **現在のエクスポート機能**
現在はデモ版のため、データエクスポート機能は未実装です。

🚀 **本格運用時のエクスポート機能**

**1. Excel出力**
- **商品一覧**: 全商品の詳細情報
- **在庫レポート**: カテゴリ別、状態別集計
- **発注履歴**: 期間指定での発注データ
- **利用統計**: 月次・年次の利用状況

**2. CSV形式**
- **他システム連携**: 会計システム、ERPシステム
- **データ分析**: Excelでの詳細分析用
- **カスタマイズ**: 必要な項目のみ選択出力

**3. PDF レポート**
- **月次報告書**: 自動生成されたサマリー
- **商品ラベル**: QRコード付き商品ラベル印刷
- **配送伝票**: 顧客情報付き配送用紙

**4. API連携**
- **リアルタイム出力**: JSON, XML形式
- **スケジュール出力**: 定期的な自動エクスポート
- **外部システム**: 直接的なデータ連携

**5. 出力項目例**
- 商品管理番号、商品名、カテゴリ、状態
- 顧客名、住所、担当者、配送日
- 利用開始日、返却日、メンテナンス履歴
- 稼働率、回転率、収益データ`,

      'インポート': `データのインポート機能について説明します：

📥 **データインポート機能**

**1. 商品データ一括登録**
- **Excel形式**: 商品マスタの一括アップロード
- **CSV形式**: 他システムからの移行データ
- **必須項目**: 商品名、カテゴリ、管理番号
- **任意項目**: メーカー、型番、購入日、価格

**2. 顧客データインポート**
- **顧客リスト**: 名前、住所、連絡先の一括登録
- **重複チェック**: 既存顧客との自動照合
- **データ検証**: 住所形式、電話番号形式の確認

**3. 履歴データ移行**
- **過去の取引**: 既存システムからの履歴移行
- **メンテナンス記録**: 点検・修理履歴の引き継ぎ
- **利用統計**: 過去の稼働データ移行

**4. インポート手順**
1. **テンプレートダウンロード**: 専用Excel形式
2. **データ入力**: 必須項目の記入
3. **ファイルアップロード**: ドラッグ&ドロップ対応
4. **データ検証**: エラーチェックと修正提案
5. **プレビュー確認**: 登録前の最終確認
6. **一括登録**: 確定してデータベースに保存

**5. エラー処理**
- **形式エラー**: 無効な文字、必須項目不備
- **重複エラー**: 既存データとの競合
- **修正支援**: エラー箇所の詳細表示と修正案

現在のデモ版では未実装ですが、本格運用時に利用可能になります`,

      // === トラブルシューティング ===
      'エラー': `エラーが発生した場合の対処法を説明します：

🚨 **よくあるエラーと対処法**

**1. 画面が真っ白になる場合**
- **原因**: JavaScriptエラー、ブラウザ互換性問題
- **対処法**: 
  - ページの再読み込み（Ctrl+F5 または Cmd+R）
  - ブラウザキャッシュのクリア
  - 開発者ツール（F12）でエラーログ確認
  - 異なるブラウザで試行

**2. QRコードが認識されない場合**
- **原因**: カメラ権限、照明不足、QRコード不良
- **対処法**:
  - カメラアクセス許可の確認
  - 適切な照明下での撮影
  - QRコードとの距離調整（10-30cm）
  - QRコードの汚れ・損傷確認
  - ブラウザの再起動

**3. データが保存されない場合**
- **原因**: ローカルストレージ容量不足、ブラウザ設定
- **対処法**:
  - ブラウザの容量確認
  - 不要なサイトデータの削除
  - プライベートモードの無効化
  - Cookieとストレージの有効化

**4. 操作が重い・遅い場合**
- **原因**: データ量増加、メモリ不足
- **対処法**:
  - ブラウザタブの整理
  - PCの再起動
  - 古いデータの削除
  - 別のブラウザでの試行

**5. 検索・フィルタが効かない場合**
- **原因**: データ形式の不整合、キャッシュ問題
- **対処法**:
  - 検索条件の見直し
  - フィルタのリセット
  - ページの再読み込み
  - データの再入力

🔧 **緊急時の対応**
- **データのバックアップ**: ブラウザの開発者ツールからローカルストレージをコピー
- **システム管理者への連絡**: 詳細なエラーメッセージとスクリーンショットを準備
- **代替手段**: 紙ベースでの一時的な業務継続`,

      '音声': `音声認識機能のトラブルシューティングを説明します：

🎤 **音声認識の対応状況**

**1. 対応ブラウザ**
- **完全対応**: Google Chrome（推奨）
- **対応**: Microsoft Edge, Safari（macOS/iOS）
- **部分対応**: Firefox（設定により有効化）
- **未対応**: Internet Explorer, 古いブラウザ

**2. よくある問題と解決法**

**🔇 音声認識が開始されない**
- **マイク権限**: ブラウザの設定でマイクアクセスを許可
- **デバイス確認**: マイクが正常に接続されているか確認
- **ブラウザ更新**: 最新版への更新
- **HTTPS必須**: セキュアな接続環境での使用

**🔊 音声が認識されない**
- **音量調整**: マイク音量の適切な設定
- **雑音対策**: 静かな環境での使用
- **発音明瞭**: はっきりとした発音を心がけ
- **距離調整**: マイクから10-30cm程度

**🗣️ 誤認識が多い場合**
- **話し方**: ゆっくり、はっきりと話す
- **日本語設定**: ブラウザの言語設定確認
- **コマンド学習**: 正確なコマンド形式で話す
- **練習**: 「WC-001を返却」「スキャン開始」など定型文の練習

**3. 音声コマンド一覧**
- **商品操作**: 「[管理番号]を返却/貸出/メンテナンス」
- **検索**: 「[商品名/カテゴリ]を検索」
- **ナビゲーション**: 「[画面名]を開く」
- **機能実行**: 「スキャン開始」「レポート生成」

**4. 代替操作**
音声認識が利用できない場合は、すべての機能がマウス・キーボード操作でも利用可能です。

**5. ブラウザ別設定**
- **Chrome**: chrome://settings/content/microphone
- **Edge**: edge://settings/content/microphone  
- **Safari**: 環境設定 > Webサイト > マイク`,

      'カメラ': `カメラ機能のトラブルシューティングを説明します：

📷 **カメラ機能について**

**1. 対応機能**
- **QRコードスキャン**: 商品管理番号の読み取り
- **商品撮影**: AI状態判定用の写真撮影
- **バーコード読み取り**: 複数形式対応

**2. よくある問題と解決法**

**📱 カメラが起動しない**
- **権限設定**: ブラウザでカメラアクセスを許可
- **デバイス確認**: カメラが他のアプリで使用中でないか確認  
- **ドライバ更新**: カメラドライバの最新化
- **ブラウザ再起動**: 一度ブラウザを完全に閉じて再起動

**🔍 QRコードが読み取れない**
- **照明**: 十分な明るさの確保
- **距離**: QRコードから10-30cmの距離
- **角度**: QRコードと並行に保持
- **清潔性**: レンズとQRコードの清掃
- **サイズ**: QRコードが画面内に収まっているか確認

**📸 写真が撮影できない**
- **容量確認**: デバイスの空き容量
- **形式対応**: JPEG、PNG形式での保存
- **解像度**: カメラ解像度の調整
- **安定性**: 手ブレを避けて撮影

**3. カメラ設定の推奨値**
- **解像度**: 1280x720 (HD) 以上
- **フォーカス**: 自動フォーカス有効
- **向き**: 背面カメラの使用（スマホの場合）
- **フラッシュ**: 必要に応じて使用

**4. 対応デバイス**
- **PC**: USBカメラ、内蔵Webカメラ
- **スマートフォン**: 前面・背面カメラ
- **タブレット**: 内蔵カメラ
- **推奨**: 背面カメラ（高解像度のため）

**5. プライバシー保護**
- **データ保存**: 撮影した写真はローカル保存のみ
- **外部送信**: 画像データの外部送信なし
- **削除**: 分析後は自動的に削除可能
- **権限管理**: 必要時のみカメラアクセス

**6. 代替手段**
カメラが使用できない場合は、手動での管理番号入力や、事前に撮影した写真のアップロードも可能です。`,
    }
    
    // より具体的なマッチングを優先
    const question = faqQuestion.toLowerCase()
    let answer = ''
    
    // === 詳細なパターンマッチング ===
    // 特定の質問パターンを最優先で処理
    
    // 発注関連の詳細質問
    if (question.includes('発注') && (question.includes('どう') || question.includes('方法') || question.includes('作り'))) {
      answer = `新規発注の詳細な作成手順：

📋 **発注作成の流れ**
1. **📋発注管理ページを開く**
   - 左メニューから「📋発注管理」をクリック

2. **新規発注ボタンをクリック**
   - ページ右上の「新規発注」ボタンを押す

3. **基本情報の入力**
   - 顧客名：お客様の氏名を入力
   - 連絡先：電話番号、メールアドレス
   - 住所：配送先住所を詳細に入力

4. **発注詳細の設定**
   - 希望日：お客様が希望する配送日
   - 担当者：この発注を担当するスタッフ名
   - 持出し者：実際に配送を行うスタッフ名

5. **商品の選択**
   - 商品カテゴリから選択（車椅子、ベッド、歩行器など）
   - 具体的な商品名を選択
   - 必要数量を入力（複数個必要な場合）

6. **承認設定**
   - 高価な商品や特殊な商品は自動的に承認必要フラグが設定
   - 通常商品は承認不要で即座に準備待ちに移行

7. **発注の確定**
   - 「発注作成」ボタンで確定
   - 承認が必要な場合は発注承認ページに移行
   - 承認不要の場合は準備待ちページに表示

💡 **発注作成のコツ**
- 住所は配送スタッフが迷わないよう詳細に記入
- 希望日は余裕を持った日程を設定
- 複数商品の場合は優先順位を備考欄に記載`
    
    // 返却関連の質問
    } else if (question.includes('返却') && (question.includes('どう') || question.includes('方法') || question.includes('手順'))) {
      answer = `商品返却処理の詳細手順：

📦 **返却処理の流れ**

**1. 商品受取・確認**
- **状態チェック**: 外観の損傷、汚れ、動作確認
- **付属品確認**: 取扱説明書、部品の有無
- **顧客確認**: 返却理由、使用感のヒアリング

**2. QRスキャンでの状態変更**
- **📱QRスキャンページ**を開く
- **商品のQRコード**をスキャン
- **「返却処理」**ボタンをクリック
- **返却情報入力**: 返却者名、状態メモ、写真添付

**3. 状態の分類処理**
- **良好**: そのまま消毒工程へ
- **軽微な汚れ**: クリーニング後に消毒
- **損傷あり**: メンテナンス工程へ回送
- **故障**: 修理依頼または廃棄判定

**4. 顧客への完了通知**
- **返却確認書**: 自動生成される受領書
- **次回利用案内**: サービス継続のご案内
- **満足度調査**: 任意でのアンケート実施

**5. 社内手続き**
- **履歴記録**: 返却日時、状態、担当者を記録
- **在庫更新**: システム上のステータス変更
- **売上計上**: 利用期間に応じた売上記録

💡 **返却時のポイント**
- 顧客とのコミュニケーションを大切に
- 商品状態は正確に記録
- 次回利用につながる丁寧な対応`
    
    // QRスキャン関連の質問
    } else if (question.includes('qr') || question.includes('スキャン')) {
      answer = appKnowledge['QR']
    
    // 準備完了関連の質問
    } else if (question.includes('準備') && (question.includes('どう') || question.includes('方法') || question.includes('完了'))) {
      answer = `商品準備完了処理の詳細手順：

⏳ **準備完了までの流れ**

**1. 準備待ち画面の確認**
- **📋発注管理**から承認済み発注を確認
- **⏳準備待ち**ページで対象発注を表示
- **商品リスト**で必要な商品と数量を確認

**2. 商品の準備・検品**
- **在庫から商品選出**: 利用可能状態の商品を選択
- **品質チェック**: 清潔性、動作、付属品の確認
- **カスタマイズ**: 必要に応じて調整・設定

**3. 管理番号の割り当て**
- **方法1 - QRスキャン**: 商品のQRコードをスキャンして自動割り当て
- **方法2 - 手動入力**: 準備待ち画面で「準備完了」→管理番号入力

**4. 個別商品の管理**
- **数量2以上**: 個別に管理番号を割り当て
- **例**: 車椅子3台 → WC-001, WC-002, WC-003
- **追跡**: 個別の商品として以降の工程で管理

**5. 配送準備**
- **梱包・積載**: 配送に適した状態に準備
- **配送伝票**: 顧客情報と商品リストを印刷
- **ルート確認**: 効率的な配送順序の計画

**6. マイページ反映**
- **担当者**: 自分が担当する商品がマイページに表示
- **持出し者**: 配送担当商品がマイページに表示
- **進捗管理**: リアルタイムでステータス確認

💡 **効率化のコツ**
- 連続スキャンモードで複数商品を一括処理
- 手動割り当てと組み合わせて柔軟に対応
- 事前に商品の場所を把握しておく`
    
    // 基本的な使い方の質問
    } else if (question.includes('使い方') || question.includes('操作')) {
      answer = appKnowledge['使い方']
    } else if (question.includes('メニュー') || question.includes('どこ')) {
      answer = appKnowledge['メニュー']
    }
    
    // キーワードマッチングで回答を検索（後方互換性のため）
    if (!answer) {
      for (const [keyword, response] of Object.entries(appKnowledge)) {
        if (faqQuestion.toLowerCase().includes(keyword.toLowerCase())) {
          answer = response
          break
        }
      }
    }
    
    // デフォルトのヘルプメッセージ
    if (!answer) {
      answer = `「${faqQuestion}」についてお答えします。

🤖 **より詳細な情報が必要でしたら、以下のような形で質問してください：**

📱 **操作方法について**
- 「QRスキャンの使い方は？」
- 「発注はどう作りますか？」
- 「返却処理の手順は？」
- 「準備完了の方法は？」

📍 **機能の場所について**
- 「在庫管理はどこにありますか？」
- 「メニューの使い方は？」
- 「検索機能はどこ？」

🔧 **トラブルについて**
- 「カメラが起動しません」
- 「QRコードが読めません」
- 「エラーが出ています」
- 「音声認識が働きません」

📊 **機能の詳細について**
- 「AI機能って何ができる？」
- 「データはどこに保存される？」
- 「履歴はどう確認する？」

💡 **このアプリでできること**
- QRスキャンによる商品管理
- 発注の作成と承認フロー
- 在庫状況の確認
- 個人の担当商品管理
- AI機能による効率化

具体的にどの部分についてお知りになりたいか、詳しく教えてください！`
    }
    
    setFaqAnswer(answer)
  }

  return (
    <div className="p-6 space-y-6">
      <div className="flex items-center justify-between">
        <h1 className="text-2xl font-bold text-foreground">AI機能デモ</h1>
      </div>

      {/* AI機能一覧 */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {/* 商品状態自動判定 */}
        <div className="bg-card rounded-xl border border-border p-6 shadow-sm">
          <div className="flex items-center mb-4">
            <div className="h-10 w-10 rounded-full bg-blue-500/20 flex items-center justify-center mr-3">
              <span className="text-blue-500 text-lg">📸</span>
            </div>
            <h3 className="text-lg font-semibold text-foreground">商品状態AI判定</h3>
          </div>
          <p className="text-sm text-muted-foreground mb-4">
            カメラで撮影した商品をAIが自動分析し、状態や損傷を判定します
          </p>
          <Button 
            onClick={() => alert('カメラ機能は開発中です')}
            className="w-full"
          >
            分析開始
          </Button>
        </div>

        {/* マルチスキャナー */}
        <div className="bg-card rounded-xl border border-border p-6 shadow-sm">
          <div className="flex items-center mb-4">
            <div className="h-10 w-10 rounded-full bg-green-500/20 flex items-center justify-center mr-3">
              <span className="text-green-500 text-lg">🔍</span>
            </div>
            <h3 className="text-lg font-semibold text-foreground">マルチ認識スキャナー</h3>
          </div>
          <p className="text-sm text-muted-foreground mb-4">
            QRコード、バーコード、シリアル番号を自動認識します
          </p>
          <Button 
            onClick={() => alert('スキャン機能は開発中です')}
            className="w-full"
          >
            スキャン開始
          </Button>
        </div>

        {/* AIレポート生成 */}
        <div className="bg-card rounded-xl border border-border p-6 shadow-sm">
          <div className="flex items-center mb-4">
            <div className="h-10 w-10 rounded-full bg-purple-500/20 flex items-center justify-center mr-3">
              <span className="text-purple-500 text-lg">📊</span>
            </div>
            <h3 className="text-lg font-semibold text-foreground">AIレポート生成</h3>
          </div>
          <p className="text-sm text-muted-foreground mb-4">
            業務データをAIが分析し、詳細なレポートを自動生成します
          </p>
          <Button 
            onClick={generateReport}
            disabled={isGenerating}
            className="w-full"
          >
            {isGenerating ? 'レポート生成中...' : 'レポート生成'}
          </Button>
          
          {showReport && (
            <div className="mt-4 p-3 bg-accent/30 rounded-lg">
              <h4 className="font-semibold text-sm mb-2">月次レポート</h4>
              <p className="text-xs text-muted-foreground">
                今月の貸出件数: 156件 (+12%)<br/>
                返却件数: 148件 (+8%)<br/>
                稼働率: 78% (+3%)
              </p>
            </div>
          )}
        </div>

        {/* AIアシスタント */}
        <div className="bg-card rounded-xl border border-border p-6 shadow-sm">
          <div className="flex items-center mb-4">
            <div className="h-10 w-10 rounded-full bg-orange-500/20 flex items-center justify-center mr-3">
              <span className="text-orange-500 text-lg">💬</span>
            </div>
            <h3 className="text-lg font-semibold text-foreground">AIアシスタント</h3>
          </div>
          <p className="text-sm text-muted-foreground mb-4">
            このアプリの使い方や機能について、AIがお答えします
          </p>
          <div className="space-y-2">
            <input
              type="text"
              value={faqQuestion}
              onChange={(e) => setFaqQuestion(e.target.value)}
              placeholder="「発注はどう作りますか？」「返却の方法は？」「準備完了の手順は？」など"
              className="w-full p-2 border border-border rounded text-sm"
            />
            <Button 
              onClick={askAI}
              disabled={!faqQuestion.trim()}
              className="w-full"
            >
              AIに質問する
            </Button>
          </div>
          
          {faqAnswer && (
            <div className="mt-4 p-3 bg-accent/30 rounded-lg border-l-4 border-orange-500">
              <div className="flex items-start space-x-2">
                <span className="text-orange-500 text-sm">🤖</span>
                <p className="text-xs text-foreground whitespace-pre-line">{faqAnswer}</p>
              </div>
            </div>
          )}
          
          <div className="mt-3 text-xs text-muted-foreground">
            <p className="font-medium mb-1">質問例：</p>
            <ul className="space-y-1">
              <li>• 「発注はどう作りますか？」</li>
              <li>• 「返却の方法は？」</li>
              <li>• 「準備完了の手順は？」</li>
              <li>• 「QRスキャンの使い方は？」</li>
              <li>• 「エラーが出た時の対処法は？」</li>
              <li>• 「データのバックアップは？」</li>
              <li>• 「AI機能って何ができる？」</li>
              <li>• 「統計の見方は？」</li>
            </ul>
          </div>
        </div>

        {/* 利用状況モニタリング */}
        <div className="bg-card rounded-xl border border-border p-6 shadow-sm">
          <div className="flex items-center mb-4">
            <div className="h-10 w-10 rounded-full bg-red-500/20 flex items-center justify-center mr-3">
              <span className="text-red-500 text-lg">📈</span>
            </div>
            <h3 className="text-lg font-semibold text-foreground">利用状況AI分析</h3>
          </div>
          <p className="text-sm text-muted-foreground mb-4">
            商品の利用パターンをAIが分析し、最適化提案を行います
          </p>
          <Button 
            onClick={() => alert('利用状況分析結果:\n車椅子WC-001: 使用頻度75%\n平均貸出期間: 14日\nメンテナンス: 年4回')}
            className="w-full"
          >
            分析開始
          </Button>
        </div>

        {/* 音声制御 */}
        <div className="bg-card rounded-xl border border-border p-6 shadow-sm">
          <div className="flex items-center mb-4">
            <div className="h-10 w-10 rounded-full bg-indigo-500/20 flex items-center justify-center mr-3">
              <span className="text-indigo-500 text-lg">🎤</span>
            </div>
            <h3 className="text-lg font-semibold text-foreground">音声制御</h3>
          </div>
          <p className="text-sm text-muted-foreground mb-4">
            音声コマンドでハンズフリー操作が可能です
          </p>
          <Button 
            onClick={() => {
              if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {
                alert('音声認識機能が利用可能です。「レポート生成」などと話してみてください。')
              } else {
                alert('このブラウザは音声認識に対応していません。')
              }
            }}
            className="w-full"
          >
            音声認識テスト
          </Button>
          <div className="text-xs text-muted-foreground space-y-1 mt-3">
            <p>• "レポート生成"</p>
            <p>• "在庫確認"</p>
            <p>• "スキャン開始"</p>
          </div>
        </div>
      </div>

      <div className="bg-card rounded-xl border border-border p-6 shadow-sm">
        <h3 className="text-lg font-semibold text-foreground mb-4">AI機能について</h3>
        <div className="space-y-3 text-sm text-muted-foreground">
          <p>
            <strong>現在の状態:</strong> これらはAI機能のデモ版です。実際の本番環境では、以下のAPIと連携して高精度なAI機能を提供します：
          </p>
          <ul className="list-disc list-inside space-y-1 ml-4">
            <li>画像認識: オープンエーアイ ビジョンAPI、グーグルクラウド ビジョン</li>
            <li>レポート生成: オープンエーアイ GPT-4、クロード API</li>
            <li>FAQ検索: オープンエーアイ 埋め込み + ベクトルデータベース</li>
            <li>音声認識: ブラウザ標準ウェブ音声API</li>
            <li>QR/バーコード認識: ZXing、QuaggaJS</li>
          </ul>
          <p>
            <strong>テスト可能な機能:</strong> 音声認識（ブラウザ対応時）、FAQ検索、レポート生成シミュレーション
          </p>
        </div>
      </div>
    </div>
  )
}